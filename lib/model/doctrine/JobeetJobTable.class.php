<?php

/**
 * JobeetJobTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class JobeetJobTable extends Doctrine_Table
{
    //Set type value from array list
    static public $types = array(
        'full-time' => 'Full time',
        'part-time' => 'Part time',
        'freelance' => 'Freelance',
    );

    //set value
    public function getTypes()
    {
      return self::$types;
    }
    
    /**
     * Returns an instance of this class.
     *
     * @return object JobeetJobTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('JobeetJob');
    }
    
//    public function getActiveJobs()
//    {
////        echo date('Y-m-d H:i:s')."<br />";
////        echo time()."<br />";
////        die(date('Y-m-d H:i:s', time()));
//        $q = $this->createQuery("query")
//        ->where('query.expires_at > ?', date('Y-m-d H:i:s', time()));
//
//      return $q->execute();
//    }
    
//    public function getActiveJobs(Doctrine_Query $q = null)
//    {
//      if (is_null($q))
//      {
//        $q = Doctrine_Query::create()
//          ->from('JobeetJob j');
//      }
//
//      $q->andWhere('j.expires_at > ?', date('Y-m-d H:i:s', time()))
//        ->addOrderBy('j.expires_at DESC');
//
//      return $q->execute();
//    }
//    
//    public function retrieveActiveJob(Doctrine_Query $q)
//    {
//      //var_dump($q); die();  
//      $q->andWhere('expires_at > ?', date('Y-m-d H:i:s', time()));
//
//      return $q->fetchOne();
//    }
    
    public function retrieveActiveJob(Doctrine_Query $q)
    {
      return $this->addActiveJobsQuery($q)->fetchOne();
    }

    public function getActiveJobs(Doctrine_Query $q = null)
    {
      return $this->addActiveJobsQuery($q)->execute();
    }

    public function countActiveJobs(Doctrine_Query $q = null)
    {
      return $this->addActiveJobsQuery($q)->count();
    }

    public function addActiveJobsQuery(Doctrine_Query $q = null)
    {
        if (is_null($q))
        {
          $q = Doctrine_Query::create()
            ->from('JobeetJob j');
        }

        $alias = $q->getRootAlias();

        $q->andWhere($alias . '.expires_at > ?', date('Y-m-d H:i:s', time()))
          ->addOrderBy($alias . '.created_at DESC');

        $q->andWhere($alias . '.is_activated = ?', 1);
      
        return $q;
    }

    public function retrieveBackendJobList(Doctrine_Query $q)
    {
      $rootAlias = $q->getRootAlias();

      $q->leftJoin($rootAlias . '.JobeetCategory c');

      return $q;
    }

    public function getLatestPost()
    {
      $q = Doctrine_Query::create()->from('JobeetJob j');

      $this->addActiveJobsQuery($q);

      return $q->fetchOne();
    }

    public function getForToken(array $parameters)
    {
      $affiliate = Doctrine_Core::getTable('JobeetAffiliate') ->findOneByToken($parameters['token']);
      if (!$affiliate || !$affiliate->getIsActive())
      {
        throw new sfError404Exception(sprintf('Affiliate with token "%s" does not exist or is not activated.', $parameters['token']));
      }

      return $affiliate->getActiveJobs();
    }
 
    static public function getLuceneIndex()
    {
      ProjectConfiguration::registerZend();

      if (file_exists($index = self::getLuceneIndexFile()))
      {
        return Zend_Search_Lucene::open($index);
      }

      return Zend_Search_Lucene::create($index);
    }

    static public function getLuceneIndexFile()
    {
      return sfConfig::get('sf_data_dir').'/job.'.sfConfig::get('sf_environment').'.index';
    }
    
    public function getForLuceneQuery($query)
    {
      $hits = self::getLuceneIndex()->find($query);

      $pks = array();
      foreach ($hits as $hit)
      {
        $pks[] = $hit->pk;
      }

      if (empty($pks))
      {
        return array();
      }

      $q = $this->createQuery('j')
        ->whereIn('j.id', $pks)
        ->limit(20);

      $q = $this->addActiveJobsQuery($q);

      return $q->execute();
    }
    
}